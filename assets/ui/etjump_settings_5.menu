#include "ui/menudef.h"
#include "ui/menudef_ext.h"
#include "ui/menumacros.h"
#include "ui/menumacros_ext.h"

// Left side menus
#define SUBW_SNAPHUD_Y SUBW_Y
#define SUBW_SNAPHUD_ITEM_Y SUBW_SNAPHUD_Y + SUBW_HEADER_HEIGHT
#define SUBW_SNAPHUD_HEIGHT SUBW_HEADER_HEIGHT + SUBW_ITEM_SPACING_Y + (SUBW_ITEM_SPACING_Y * 10)

#define SUBW_SPECINFO_Y SUBW_SNAPHUD_Y + SUBW_SNAPHUD_HEIGHT + SUBW_SPACING_Y
#define SUBW_SPECINFO_ITEM_Y SUBW_SPECINFO_Y + SUBW_HEADER_HEIGHT
#define SUBW_SPECINFO_HEIGHT SUBW_HEADER_HEIGHT + SUBW_ITEM_SPACING_Y + (SUBW_ITEM_SPACING_Y * 4)

#define SUBW_JUMPSPEEDS_Y SUBW_SPECINFO_Y + SUBW_SPECINFO_HEIGHT + SUBW_SPACING_Y
#define SUBW_JUMPSPEEDS_ITEM_Y SUBW_JUMPSPEEDS_Y + SUBW_HEADER_HEIGHT
#define SUBW_JUMPSPEEDS_HEIGHT SUBW_HEADER_HEIGHT + SUBW_ITEM_SPACING_Y + (SUBW_ITEM_SPACING_Y * 9)

// Right side menus
#define SUBW_STRAFEQUALITY_Y SUBW_Y
#define SUBW_STRAFEQUALITY_ITEM_Y SUBW_STRAFEQUALITY_Y + SUBW_HEADER_HEIGHT
#define SUBW_STRAFEQUALITY_HEIGHT SUBW_HEADER_HEIGHT + SUBW_ITEM_SPACING_Y + (SUBW_ITEM_SPACING_Y * 6)

#define SUBW_UPMOVEMETER_Y SUBW_STRAFEQUALITY_Y + SUBW_STRAFEQUALITY_HEIGHT + SUBW_SPACING_Y
#define SUBW_UPMOVEMETER_ITEM_Y SUBW_UPMOVEMETER_Y + SUBW_HEADER_HEIGHT
#define SUBW_UPMOVEMETER_HEIGHT SUBW_HEADER_HEIGHT + SUBW_ITEM_SPACING_Y + (SUBW_ITEM_SPACING_Y * 16)

#define GROUP_NAME "group_etjump_settings_5"

menuDef {
    name "etjump_settings_5"
    visible 0
    fullscreen 0
    rect WINDOW_X WINDOW_Y WINDOW_WIDTH WINDOW_HEIGHT
    style WINDOW_STYLE_FILLED
    onESC {
        close etjump_settings_5; open etjump
    }

    WINDOW("SETTINGS", 94)

    SUBWINDOW(SUBW_RECT_LEFT_X, SUBW_SNAPHUD_Y, SUBW_WIDTH, SUBW_SNAPHUD_HEIGHT, "SNAPHUD")
        MULTI               (SUBW_ITEM_LEFT_X, SUBW_SNAPHUD_ITEM_Y + (SUBW_ITEM_SPACING_Y * 0), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Velocity Snapping HUD:", 0.2, SUBW_ITEM_HEIGHT, "etj_drawSnapHUD", cvarFloatList { "No" 0 "Full zones" 1 "Edges only" 2 }, "Draw velocity snapping HUD\netj_drawSnapHUD")
        CVARINTLABEL        (SUBW_ITEM_LEFT_X, SUBW_SNAPHUD_ITEM_Y + (SUBW_ITEM_SPACING_Y * 1), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_snapHUDOffsetY", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_LEFT_X, SUBW_SNAPHUD_ITEM_Y + (SUBW_ITEM_SPACING_Y * 1), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Snaphud Y:", 0.2, SUBW_ITEM_HEIGHT, etj_snapHUDOffsetY 0 -240 240 5, "Sets Y offset of snaphud\netj_snapHUDOffsetY")
        CVARINTLABEL        (SUBW_ITEM_LEFT_X, SUBW_SNAPHUD_ITEM_Y + (SUBW_ITEM_SPACING_Y * 2), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_snapHUDHeight", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_LEFT_X, SUBW_SNAPHUD_ITEM_Y + (SUBW_ITEM_SPACING_Y * 2), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Snaphud Height:", 0.2, SUBW_ITEM_HEIGHT, etj_snapHUDHeight 10 1 100 1, "Sets the height of snaphud\netj_snapHUDHeight")
        CVARINTLABEL        (SUBW_ITEM_LEFT_X, SUBW_SNAPHUD_ITEM_Y + (SUBW_ITEM_SPACING_Y * 3), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_snapHUDFov", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_LEFT_X, SUBW_SNAPHUD_ITEM_Y + (SUBW_ITEM_SPACING_Y * 3), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Snaphud FOV:", 0.2, SUBW_ITEM_HEIGHT, etj_snapHUDFov 0 0 179 5, "Sets FOV of snaphud, 0 to use your current FOV\netj_snapHUDFov")
        YESNO               (SUBW_ITEM_LEFT_X, SUBW_SNAPHUD_ITEM_Y + (SUBW_ITEM_SPACING_Y * 4), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Highlight active zone:", 0.2, SUBW_ITEM_HEIGHT, "etj_snapHUDHLActive", "Highlight active snaphud zone HUD\netj_snapHUDHLActive")
        MULTI               (SUBW_ITEM_LEFT_X, SUBW_SNAPHUD_ITEM_Y + (SUBW_ITEM_SPACING_Y * 5), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Snaphud trueness:", 0.2, SUBW_ITEM_HEIGHT, "etj_snapHUDTrueness", cvarFloatList { "Off" 0 "Upmove" 1 "Groundzones" 2 "Upmove + Groundzones" 3 }, "Sets trueness of snaphud\netj_snapHUDTrueness")
        MULTI               (SUBW_ITEM_LEFT_X, SUBW_SNAPHUD_ITEM_Y + (SUBW_ITEM_SPACING_Y * 6), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Snaphud color 1:", 0.2, SUBW_ITEM_HEIGHT, "etj_snapHUDColor1", cvarStrList { "White"; "white"; "Yellow"; "yellow"; "Red"; "red"; "Green"; "green"; "Blue"; "blue"; "Magenta"; "magenta"; "Cyan"; "cyan"; "Orange"; "orange"; "Light Blue"; "0xa0c0ff"; "Medium Blue"; "mdblue"; "Light Red"; "0xffc0a0"; "Medium Red"; "mdred"; "Light Green"; "0xa0ffc0"; "Medium Green"; "mdgreen"; "Dark Green"; "dkgreen"; "Medium Cyan"; "mdcyan"; "Medium Yellow"; "mdyellow"; "Medium Orange"; "mdorange"; "Light Grey"; "ltgrey"; "Medium Grey"; "mdgrey"; "Dark Grey"; "dkgrey"; "Black"; "black" }, "Sets primary color of snaphud\netj_snapHUDColor1")
        MULTI               (SUBW_ITEM_LEFT_X, SUBW_SNAPHUD_ITEM_Y + (SUBW_ITEM_SPACING_Y * 7), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Snaphud color 2:", 0.2, SUBW_ITEM_HEIGHT, "etj_snapHUDColor2", cvarStrList { "White"; "white"; "Yellow"; "yellow"; "Red"; "red"; "Green"; "green"; "Blue"; "blue"; "Magenta"; "magenta"; "Cyan"; "cyan"; "Orange"; "orange"; "Light Blue"; "0xa0c0ff"; "Medium Blue"; "mdblue"; "Light Red"; "0xffc0a0"; "Medium Red"; "mdred"; "Light Green"; "0xa0ffc0"; "Medium Green"; "mdgreen"; "Dark Green"; "dkgreen"; "Medium Cyan"; "mdcyan"; "Medium Yellow"; "mdyellow"; "Medium Orange"; "mdorange"; "Light Grey"; "ltgrey"; "Medium Grey"; "mdgrey"; "Dark Grey"; "dkgrey"; "Black"; "black" }, "Sets secondary color of snaphud\netj_snapHUDColor2")
        MULTI               (SUBW_ITEM_LEFT_X, SUBW_SNAPHUD_ITEM_Y + (SUBW_ITEM_SPACING_Y * 8), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Highlight color 1:", 0.2, SUBW_ITEM_HEIGHT, "etj_snapHUDHLColor1", cvarStrList { "White"; "white"; "Yellow"; "yellow"; "Red"; "red"; "Green"; "green"; "Blue"; "blue"; "Magenta"; "magenta"; "Cyan"; "cyan"; "Orange"; "orange"; "Light Blue"; "0xa0c0ff"; "Medium Blue"; "mdblue"; "Light Red"; "0xffc0a0"; "Medium Red"; "mdred"; "Light Green"; "0xa0ffc0"; "Medium Green"; "mdgreen"; "Dark Green"; "dkgreen"; "Medium Cyan"; "mdcyan"; "Medium Yellow"; "mdyellow"; "Medium Orange"; "mdorange"; "Light Grey"; "ltgrey"; "Medium Grey"; "mdgrey"; "Dark Grey"; "dkgrey"; "Black"; "black" }, "Sets color of active primary snapzone\netj_snapHUDHLColor1")
        MULTI               (SUBW_ITEM_LEFT_X, SUBW_SNAPHUD_ITEM_Y + (SUBW_ITEM_SPACING_Y * 9), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Highlight color 2:", 0.2, SUBW_ITEM_HEIGHT, "etj_snapHUDHLColor2", cvarStrList { "White"; "white"; "Yellow"; "yellow"; "Red"; "red"; "Green"; "green"; "Blue"; "blue"; "Magenta"; "magenta"; "Cyan"; "cyan"; "Orange"; "orange"; "Light Blue"; "0xa0c0ff"; "Medium Blue"; "mdblue"; "Light Red"; "0xffc0a0"; "Medium Red"; "mdred"; "Light Green"; "0xa0ffc0"; "Medium Green"; "mdgreen"; "Dark Green"; "dkgreen"; "Medium Cyan"; "mdcyan"; "Medium Yellow"; "mdyellow"; "Medium Orange"; "mdorange"; "Light Grey"; "ltgrey"; "Medium Grey"; "mdgrey"; "Dark Grey"; "dkgrey"; "Black"; "black" }, "Sets color of active secondary snapzone\netj_snapHUDHLColor2")
        CVARINTLABEL        (SUBW_ITEM_LEFT_X, SUBW_SNAPHUD_ITEM_Y + (SUBW_ITEM_SPACING_Y * 10), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_snapHUDEdgeThickness", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_LEFT_X, SUBW_SNAPHUD_ITEM_Y + (SUBW_ITEM_SPACING_Y * 10), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Edge thickness:", 0.2, SUBW_ITEM_HEIGHT, etj_snapHUDEdgeThickness 10 1 128 1, "Thickness of snapzone edges when using edge-only snaphud\netj_snapHUDEdgeThickness")

    SUBWINDOW(SUBW_RECT_LEFT_X, SUBW_SPECINFO_Y, SUBW_WIDTH, SUBW_SPECINFO_HEIGHT, "SPECTATOR INFO")
        MULTI               (SUBW_ITEM_LEFT_X, SUBW_SPECINFO_ITEM_Y + (SUBW_ITEM_SPACING_Y * 0), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Spectator list:", 0.2, SUBW_ITEM_HEIGHT, "etj_drawSpectatorInfo", cvarFloatList { "Off" 0 "Left aligned" 1 "Center Aligned" 2 "Right aligned" 3 }, "Draw a list of people spectating you\netj_drawSpectatorInfo")
        CVARINTLABEL        (SUBW_ITEM_LEFT_X, SUBW_SPECINFO_ITEM_Y + (SUBW_ITEM_SPACING_Y * 1), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_spectatorInfoX", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_LEFT_X, SUBW_SPECINFO_ITEM_Y + (SUBW_ITEM_SPACING_Y * 1), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Spec list X:", 0.2, SUBW_ITEM_HEIGHT, etj_spectatorInfoX 320 0 640 10, "Sets X position of spectator list\netj_spectatorInfoX")
        CVARINTLABEL        (SUBW_ITEM_LEFT_X, SUBW_SPECINFO_ITEM_Y + (SUBW_ITEM_SPACING_Y * 2), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_spectatorInfoY", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_LEFT_X, SUBW_SPECINFO_ITEM_Y + (SUBW_ITEM_SPACING_Y * 2), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Spec list Y:", 0.2, SUBW_ITEM_HEIGHT, etj_spectatorInfoY 30 0 480 10, "Sets Y position of spectator list\netj_spectatorInfoY")
        YESNO               (SUBW_ITEM_LEFT_X, SUBW_SPECINFO_ITEM_Y + (SUBW_ITEM_SPACING_Y * 3), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Spec list shadow:", 0.2, SUBW_ITEM_HEIGHT, "etj_spectatorInfoShadow", "Draw shadow on spectator list\netj_spectatorInfoShadow")
        CVARFLOATLABEL      (SUBW_ITEM_LEFT_X, SUBW_SPECINFO_ITEM_Y + (SUBW_ITEM_SPACING_Y * 4), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_spectatorInfoSize", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_LEFT_X, SUBW_SPECINFO_ITEM_Y + (SUBW_ITEM_SPACING_Y * 4), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Spec list size:", 0.2, SUBW_ITEM_HEIGHT, etj_spectatorInfoSize 2.3 0 10 0.1, "Size of spectator list\netj_spectatorInfoSize")

    SUBWINDOW(SUBW_RECT_LEFT_X, SUBW_JUMPSPEEDS_Y, SUBW_WIDTH, SUBW_JUMPSPEEDS_HEIGHT, "JUMP SPEEDS")
        YESNO               (SUBW_ITEM_LEFT_X, SUBW_JUMPSPEEDS_ITEM_Y + (SUBW_ITEM_SPACING_Y * 0), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Jump speeds:", 0.2, SUBW_ITEM_HEIGHT, "etj_drawJumpSpeeds", "Draw jump speed list\netj_drawJumpSpeeds")
        CVARINTLABEL        (SUBW_ITEM_LEFT_X, SUBW_JUMPSPEEDS_ITEM_Y + (SUBW_ITEM_SPACING_Y * 1), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_jumpSpeedsX", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_LEFT_X, SUBW_JUMPSPEEDS_ITEM_Y + (SUBW_ITEM_SPACING_Y * 1), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Jump speeds X:", 0.2, SUBW_ITEM_HEIGHT, etj_jumpSpeedsX 0 -6 634 10, "Sets X offset of jump speed list\netj_jumpSpeedsX")
        CVARINTLABEL        (SUBW_ITEM_LEFT_X, SUBW_JUMPSPEEDS_ITEM_Y + (SUBW_ITEM_SPACING_Y * 2), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_jumpSpeedsY", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_LEFT_X, SUBW_JUMPSPEEDS_ITEM_Y + (SUBW_ITEM_SPACING_Y * 2), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Jump speeds Y:", 0.2, SUBW_ITEM_HEIGHT, etj_jumpSpeedsY 0 -240 240 10, "Sets Y offset of jump speed list\netj_jumpSpeedsY")
        MULTI               (SUBW_ITEM_LEFT_X, SUBW_JUMPSPEEDS_ITEM_Y + (SUBW_ITEM_SPACING_Y * 3), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Jump speeds color:", 0.2, SUBW_ITEM_HEIGHT, "etj_jumpSpeedsColor", cvarStrList { "White"; "white"; "Yellow"; "yellow"; "Red"; "red"; "Green"; "green"; "Blue"; "blue"; "Magenta"; "magenta"; "Cyan"; "cyan"; "Orange"; "orange"; "Light Blue"; "0xa0c0ff"; "Medium Blue"; "mdblue"; "Light Red"; "0xffc0a0"; "Medium Red"; "mdred"; "Light Green"; "0xa0ffc0"; "Medium Green"; "mdgreen"; "Dark Green"; "dkgreen"; "Medium Cyan"; "mdcyan"; "Medium Yellow"; "mdyellow"; "Medium Orange"; "mdorange"; "Light Grey"; "ltgrey"; "Medium Grey"; "mdgrey"; "Dark Grey"; "dkgrey"; "Black"; "black" }, "Sets color of jump speed list\netj_jumpSpeedsColor")
        YESNO               (SUBW_ITEM_LEFT_X, SUBW_JUMPSPEEDS_ITEM_Y + (SUBW_ITEM_SPACING_Y * 4), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Jump speeds shadow:", 0.2, SUBW_ITEM_HEIGHT, "etj_jumpSpeedsShadow", "Draw shadow on jump speed list\netj_jumpSpeedsShadow")
        MULTI               (SUBW_ITEM_LEFT_X, SUBW_JUMPSPEEDS_ITEM_Y + (SUBW_ITEM_SPACING_Y * 5), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "List style:", 0.2, SUBW_ITEM_HEIGHT, "etj_jumpSpeedsStyle", cvarFloatList { "Vertical" 0 "Horizontal" 1 "No Label" 2 "Reversed" 4 "Hor. + No Label" 3 "Hor. + Rev." 5 "Hor. + No Label + Rev." 7 "No Label + Rev." 6 }, "Jump speed history style\netj_jumpSpeedsStyle")
        YESNO               (SUBW_ITEM_LEFT_X, SUBW_JUMPSPEEDS_ITEM_Y + (SUBW_ITEM_SPACING_Y * 6), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Show difference:", 0.2, SUBW_ITEM_HEIGHT, "etj_jumpSpeedsShowDiff", "Colorize speed if it's faster/slower than previous\netj_jumpSpeedsShowDiff")
        MULTI               (SUBW_ITEM_LEFT_X, SUBW_JUMPSPEEDS_ITEM_Y + (SUBW_ITEM_SPACING_Y * 7), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Faster color:", 0.2, SUBW_ITEM_HEIGHT, "etj_jumpSpeedsFasterColor", cvarStrList { "White"; "white"; "Yellow"; "yellow"; "Red"; "red"; "Green"; "green"; "Blue"; "blue"; "Magenta"; "magenta"; "Cyan"; "cyan"; "Orange"; "orange"; "Light Blue"; "0xa0c0ff"; "Medium Blue"; "mdblue"; "Light Red"; "0xffc0a0"; "Medium Red"; "mdred"; "Light Green"; "0xa0ffc0"; "Medium Green"; "mdgreen"; "Dark Green"; "dkgreen"; "Medium Cyan"; "mdcyan"; "Medium Yellow"; "mdyellow"; "Medium Orange"; "mdorange"; "Light Grey"; "ltgrey"; "Medium Grey"; "mdgrey"; "Dark Grey"; "dkgrey"; "Black"; "black" }, "Sets color of faster jumps\netj_jumpSpeedsFasterColor")
        MULTI               (SUBW_ITEM_LEFT_X, SUBW_JUMPSPEEDS_ITEM_Y + (SUBW_ITEM_SPACING_Y * 8), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Slower color:", 0.2, SUBW_ITEM_HEIGHT, "etj_jumpSpeedsSlowerColor", cvarStrList { "White"; "white"; "Yellow"; "yellow"; "Red"; "red"; "Green"; "green"; "Blue"; "blue"; "Magenta"; "magenta"; "Cyan"; "cyan"; "Orange"; "orange"; "Light Blue"; "0xa0c0ff"; "Medium Blue"; "mdblue"; "Light Red"; "0xffc0a0"; "Medium Red"; "mdred"; "Light Green"; "0xa0ffc0"; "Medium Green"; "mdgreen"; "Dark Green"; "dkgreen"; "Medium Cyan"; "mdcyan"; "Medium Yellow"; "mdyellow"; "Medium Orange"; "mdorange"; "Light Grey"; "ltgrey"; "Medium Grey"; "mdgrey"; "Dark Grey"; "dkgrey"; "Black"; "black" }, "Sets color of slower jumps\netj_jumpSpeedsSlowerColor")
        CVARINTLABEL        (SUBW_ITEM_LEFT_X, SUBW_JUMPSPEEDS_ITEM_Y + (SUBW_ITEM_SPACING_Y * 9), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_jumpSpeedsMinSpeed", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_LEFT_X, SUBW_JUMPSPEEDS_ITEM_Y + (SUBW_ITEM_SPACING_Y * 9), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Minimum speed:", 0.2, SUBW_ITEM_HEIGHT, etj_jumpSpeedsMinSpeed 0 0 500 1, "Color jumps below this value with the slower color value\netj_jumpSpeedsMinSpeed")

    SUBWINDOW(SUBW_RECT_RIGHT_X, SUBW_STRAFEQUALITY_Y, SUBW_WIDTH, SUBW_STRAFEQUALITY_HEIGHT, "STRAFE QUALITY")
        YESNO               (SUBW_ITEM_RIGHT_X, SUBW_STRAFEQUALITY_ITEM_Y + (SUBW_ITEM_SPACING_Y * 0), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Strafe quality:", 0.2, SUBW_ITEM_HEIGHT, "etj_drawStrafeQuality", "Draw strafe quality\netj_drawStrafeQuality")
        CVARINTLABEL        (SUBW_ITEM_RIGHT_X, SUBW_STRAFEQUALITY_ITEM_Y + (SUBW_ITEM_SPACING_Y * 1), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_strafeQualityX", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_RIGHT_X, SUBW_STRAFEQUALITY_ITEM_Y + (SUBW_ITEM_SPACING_Y * 1), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Strafe quality X:", 0.2, SUBW_ITEM_HEIGHT, etj_strafeQualityX 0 -100 540 5, "Sets X offset of strafe quality\netj_strafeQualityX")
        CVARINTLABEL        (SUBW_ITEM_RIGHT_X, SUBW_STRAFEQUALITY_ITEM_Y + (SUBW_ITEM_SPACING_Y * 2), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_strafeQualityY", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_RIGHT_X, SUBW_STRAFEQUALITY_ITEM_Y + (SUBW_ITEM_SPACING_Y * 2), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Strafe quality Y:", 0.2, SUBW_ITEM_HEIGHT, etj_strafeQualityY 0 -100 380 5, "Sets Y offset of strafe quality\netj_strafeQualityY")
        MULTI               (SUBW_ITEM_RIGHT_X, SUBW_STRAFEQUALITY_ITEM_Y + (SUBW_ITEM_SPACING_Y * 3), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Strafe quality color:", 0.2, SUBW_ITEM_HEIGHT, "etj_strafeQualityColor", cvarStrList { "White"; "white"; "Yellow"; "yellow"; "Red"; "red"; "Green"; "green"; "Blue"; "blue"; "Magenta"; "magenta"; "Cyan"; "cyan"; "Orange"; "orange"; "Light Blue"; "0xa0c0ff"; "Medium Blue"; "mdblue"; "Light Red"; "0xffc0a0"; "Medium Red"; "mdred"; "Light Green"; "0xa0ffc0"; "Medium Green"; "mdgreen"; "Dark Green"; "dkgreen"; "Medium Cyan"; "mdcyan"; "Medium Yellow"; "mdyellow"; "Medium Orange"; "mdorange"; "Light Grey"; "ltgrey"; "Medium Grey"; "mdgrey"; "Dark Grey"; "dkgrey"; "Black"; "black" }, "Sets color of strafe quality\netj_strafeQualityColor")
        YESNO               (SUBW_ITEM_RIGHT_X, SUBW_STRAFEQUALITY_ITEM_Y + (SUBW_ITEM_SPACING_Y * 4), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Strafe quality shadow:", 0.2, SUBW_ITEM_HEIGHT, "etj_strafeQualityShadow", "Draw shadow on strafe quality\netj_strafeQualityShadow")
        MULTI               (SUBW_ITEM_RIGHT_X, SUBW_STRAFEQUALITY_ITEM_Y + (SUBW_ITEM_SPACING_Y * 5), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Strafe quality size:", 0.2, SUBW_ITEM_HEIGHT, "etj_strafeQualitySize", cvarFloatList { "Tiny" 1 "Small" 2 "Medium" 3 "Big" 4 }, "Sets size of strafe quality\netj_strafeQualitySize")
        MULTI               (SUBW_ITEM_RIGHT_X, SUBW_STRAFEQUALITY_ITEM_Y + (SUBW_ITEM_SPACING_Y * 6), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Strafe quality style:", 0.2, SUBW_ITEM_HEIGHT, "etj_strafeQualityStyle", cvarFloatList { "Full" 0 "Percent" 1 "Number" 2 }, "Strafe quality style\netj_strafeQualityStyle")

    SUBWINDOW(SUBW_RECT_RIGHT_X, SUBW_UPMOVEMETER_Y, SUBW_WIDTH, SUBW_UPMOVEMETER_HEIGHT, "UPMOVE METER")
        MULTI               (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 0), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Upmove meter:", 0.2, SUBW_ITEM_HEIGHT, "etj_drawUpmoveMeter", cvarFloatList { "Off" 0 "Bar" 1 "Text" 2 "Bar + Text" 3 }, "Draw upmove meter\netj_drawUpmoveMeter")
        CVARINTLABEL        (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 1), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_upmoveMeterMaxDelay", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 1), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Max delay:", 0.2, SUBW_ITEM_HEIGHT, etj_upmoveMeterMaxDelay 360 10 1000 10, "Sets max delay of upmove meter\netj_upmoveMeterMaxDelay")
        CVARINTLABEL        (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 2), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_upmoveMeterGraphX", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 2), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Upmove meter X:", 0.2, SUBW_ITEM_HEIGHT, etj_upmoveMeterGraphX 0 -8 632 5, "Sets X offset of upmove meter\netj_upmoveMeterGraphX")
        CVARINTLABEL        (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 3), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_upmoveMeterGraphY", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 3), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Upmove meter Y:", 0.2, SUBW_ITEM_HEIGHT, etj_upmoveMeterGraphY 0 -8 472 5, "Sets Y offset of upmove meter\netj_upmoveMeterGraphY")
        CVARINTLABEL        (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 4), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_upmoveMeterGraphW", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 4), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Upmove meter W:", 0.2, SUBW_ITEM_HEIGHT, etj_upmoveMeterGraphW 6 2 40 1, "Sets width of upmove meter\netj_upmoveMeterGraphW")
        CVARINTLABEL        (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 5), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_upmoveMeterGraphH", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 5), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Upmove meter H:", 0.2, SUBW_ITEM_HEIGHT, etj_upmoveMeterGraphH 104 10 400 10, "Sets height of upmove meter\netj_upmoveMeterGraphH")
        MULTI               (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 6), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Graph color:", 0.2, SUBW_ITEM_HEIGHT, "etj_upmoveMeterGraphColor", cvarStrList { "White"; "white"; "Yellow"; "yellow"; "Red"; "red"; "Green"; "green"; "Blue"; "blue"; "Magenta"; "magenta"; "Cyan"; "cyan"; "Orange"; "orange"; "Light Blue"; "0xa0c0ff"; "Medium Blue"; "mdblue"; "Light Red"; "0xffc0a0"; "Medium Red"; "mdred"; "Light Green"; "0xa0ffc0"; "Medium Green"; "mdgreen"; "Dark Green"; "dkgreen"; "Medium Cyan"; "mdcyan"; "Medium Yellow"; "mdyellow"; "Medium Orange"; "mdorange"; "Light Grey"; "ltgrey"; "Medium Grey"; "mdgrey"; "Dark Grey"; "dkgrey"; "Black"; "black" }, "Sets upmove meter graph color\netj_upmoveMeterGraphColor")
        MULTI               (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 7), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Ground color:", 0.2, SUBW_ITEM_HEIGHT, "etj_upmoveMeterGraphOnGroundColor", cvarStrList { "White"; "white"; "Yellow"; "yellow"; "Red"; "red"; "Green"; "green"; "Blue"; "blue"; "Magenta"; "magenta"; "Cyan"; "cyan"; "Orange"; "orange"; "Light Blue"; "0xa0c0ff"; "Medium Blue"; "mdblue"; "Light Red"; "0xffc0a0"; "Medium Red"; "mdred"; "Light Green"; "0xa0ffc0"; "Medium Green"; "mdgreen"; "Dark Green"; "dkgreen"; "Medium Cyan"; "mdcyan"; "Medium Yellow"; "mdyellow"; "Medium Orange"; "mdorange"; "Light Grey"; "ltgrey"; "Medium Grey"; "mdgrey"; "Dark Grey"; "dkgrey"; "Black"; "black" }, "Sets on ground graph color\netj_upmoveMeterGraphOnGroundColor")
        MULTI               (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 8), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Prejump color:", 0.2, SUBW_ITEM_HEIGHT, "etj_upmoveMeterGraphPreJumpColor", cvarStrList { "White"; "white"; "Yellow"; "yellow"; "Red"; "red"; "Green"; "green"; "Blue"; "blue"; "Magenta"; "magenta"; "Cyan"; "cyan"; "Orange"; "orange"; "Light Blue"; "0xa0c0ff"; "Medium Blue"; "mdblue"; "Light Red"; "0xffc0a0"; "Medium Red"; "mdred"; "Light Green"; "0xa0ffc0"; "Medium Green"; "mdgreen"; "Dark Green"; "dkgreen"; "Medium Cyan"; "mdcyan"; "Medium Yellow"; "mdyellow"; "Medium Orange"; "mdorange"; "Light Grey"; "ltgrey"; "Medium Grey"; "mdgrey"; "Dark Grey"; "dkgrey"; "Black"; "black" }, "Sets prejump graph color\netj_upmoveMeterGraphPreJumpColor")
        MULTI               (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 9), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Postjump color:", 0.2, SUBW_ITEM_HEIGHT, "etj_upmoveMeterGraphPostJumpColor", cvarStrList { "White"; "white"; "Yellow"; "yellow"; "Red"; "red"; "Green"; "green"; "Blue"; "blue"; "Magenta"; "magenta"; "Cyan"; "cyan"; "Orange"; "orange"; "Light Blue"; "0xa0c0ff"; "Medium Blue"; "mdblue"; "Light Red"; "0xffc0a0"; "Medium Red"; "mdred"; "Light Green"; "0xa0ffc0"; "Medium Green"; "mdgreen"; "Dark Green"; "dkgreen"; "Medium Cyan"; "mdcyan"; "Medium Yellow"; "mdyellow"; "Medium Orange"; "mdorange"; "Light Grey"; "ltgrey"; "Medium Grey"; "mdgrey"; "Dark Grey"; "dkgrey"; "Black"; "black" }, "Sets postjump graph color\netj_upmoveMeterGraphPostJumpColor")
        CVARINTLABEL        (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 10), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_upmoveMeterGraphOutlineW", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 10), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Outline W:", 0.2, SUBW_ITEM_HEIGHT, etj_upmoveMeterGraphOutlineW 1 1 10 1, "Sets width of upmove meter outline\netj_upmoveMeterGraphOutlineW")
        MULTI               (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 11), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Outline color:", 0.2, SUBW_ITEM_HEIGHT, "etj_upmoveMeterGraphOutlineColor", cvarStrList { "White"; "white"; "Yellow"; "yellow"; "Red"; "red"; "Green"; "green"; "Blue"; "blue"; "Magenta"; "magenta"; "Cyan"; "cyan"; "Orange"; "orange"; "Light Blue"; "0xa0c0ff"; "Medium Blue"; "mdblue"; "Light Red"; "0xffc0a0"; "Medium Red"; "mdred"; "Light Green"; "0xa0ffc0"; "Medium Green"; "mdgreen"; "Dark Green"; "dkgreen"; "Medium Cyan"; "mdcyan"; "Medium Yellow"; "mdyellow"; "Medium Orange"; "mdorange"; "Light Grey"; "ltgrey"; "Medium Grey"; "mdgrey"; "Dark Grey"; "dkgrey"; "Black"; "black" }, "Sets graph outline color\netj_upmoveMeterGraphOutlineColor")
        CVARINTLABEL        (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 12), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_upmoveMeterTextX", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 12), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Text distance:", 0.2, SUBW_ITEM_HEIGHT, etj_upmoveMeterTextX 6 0 20 1, "Sets horizontal text distance to upmove meter\netj_upmoveMeterTextX")
        CVARINTLABEL        (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 13), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "etj_upmoveMeterTextH", 0.2, ITEM_ALIGN_RIGHT, SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT)
        SLIDER              (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 13), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Text spacing:", 0.2, SUBW_ITEM_HEIGHT, etj_upmoveMeterTextH 12 5 200 5, "Sets vertical spacing of upmove meter text\netj_upmoveMeterTextH")
        MULTI               (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 14), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Text color:", 0.2, SUBW_ITEM_HEIGHT, "etj_upmoveMeterTextColor", cvarStrList { "White"; "white"; "Yellow"; "yellow"; "Red"; "red"; "Green"; "green"; "Blue"; "blue"; "Magenta"; "magenta"; "Cyan"; "cyan"; "Orange"; "orange"; "Light Blue"; "0xa0c0ff"; "Medium Blue"; "mdblue"; "Light Red"; "0xffc0a0"; "Medium Red"; "mdred"; "Light Green"; "0xa0ffc0"; "Medium Green"; "mdgreen"; "Dark Green"; "dkgreen"; "Medium Cyan"; "mdcyan"; "Medium Yellow"; "mdyellow"; "Medium Orange"; "mdorange"; "Light Grey"; "ltgrey"; "Medium Grey"; "mdgrey"; "Dark Grey"; "dkgrey"; "Black"; "black" }, "Sets upmove meter graph text color\netj_upmoveMeterTextColor")
        YESNO               (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 15), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Text shadow:", 0.2, SUBW_ITEM_HEIGHT, "etj_upmoveMeterTextShadow", "Draw shadow on upmove meter text\netj_upmoveMeterTextShadow")
        MULTI               (SUBW_ITEM_RIGHT_X, SUBW_UPMOVEMETER_ITEM_Y + (SUBW_ITEM_SPACING_Y * 16), SUBW_ITEM_WIDTH, SUBW_ITEM_HEIGHT, "Text size:", 0.2, SUBW_ITEM_HEIGHT, "etj_upmoveMeterTextSize", cvarFloatList { "Tiny" 1 "Small" 2 "Medium" 3 "Big" 4 }, "Sets size of upmove meter text\netj_upmoveMeterTextSize")

        BUTTON              (ETJ_BUTTON_X + (ETJ_BUTTON_SPACING_X * 0), ETJ_BUTTON_Y, ETJ_BUTTON_WIDTH, ETJ_BUTTON_HEIGHT, "BACK", 0.3, ETJ_BUTTON_ITEM_HEIGHT, close etjump_settings_5; open etjump)
        BUTTON              (ETJ_BUTTON_X + (ETJ_BUTTON_SPACING_X * 1), ETJ_BUTTON_Y, ETJ_BUTTON_WIDTH, ETJ_BUTTON_HEIGHT, "TAB 1", 0.3, ETJ_BUTTON_ITEM_HEIGHT, close etjump_settings_5; open etjump_settings_1)
        BUTTON              (ETJ_BUTTON_X + (ETJ_BUTTON_SPACING_X * 2), ETJ_BUTTON_Y, ETJ_BUTTON_WIDTH, ETJ_BUTTON_HEIGHT, "TAB 2", 0.3, ETJ_BUTTON_ITEM_HEIGHT, close etjump_settings_5; open etjump_settings_2)
        BUTTON              (ETJ_BUTTON_X + (ETJ_BUTTON_SPACING_X * 3), ETJ_BUTTON_Y, ETJ_BUTTON_WIDTH, ETJ_BUTTON_HEIGHT, "TAB 3", 0.3, ETJ_BUTTON_ITEM_HEIGHT, close etjump_settings_5; open etjump_settings_3)
        BUTTON              (ETJ_BUTTON_X + (ETJ_BUTTON_SPACING_X * 4), ETJ_BUTTON_Y, ETJ_BUTTON_WIDTH, ETJ_BUTTON_HEIGHT, "TAB 4", 0.3, ETJ_BUTTON_ITEM_HEIGHT, close etjump_settings_5; open etjump_settings_4)
        BUTTONACTIVE        (ETJ_BUTTON_X + (ETJ_BUTTON_SPACING_X * 5), ETJ_BUTTON_Y, ETJ_BUTTON_WIDTH, ETJ_BUTTON_HEIGHT, "TAB 5", 0.3, ETJ_BUTTON_ITEM_HEIGHT, close etjump_settings_5; open etjump_settings_5)
        BUTTON              (ETJ_BUTTON_X + (ETJ_BUTTON_SPACING_X * 6), ETJ_BUTTON_Y, ETJ_BUTTON_WIDTH, ETJ_BUTTON_HEIGHT, "TAB 6", 0.3, ETJ_BUTTON_ITEM_HEIGHT, close etjump_settings_5; open etjump_settings_6)
}
